#!/bin/bash
decrypt() {
	infile=$1
	outfile=$2
	asynckey=$3
	total=$(stat --printf="%s" $infile)
	found=0
	while read line; do
	  if [ "$line" = "" ]; then
	  	let "keylen++"
	  	break
	  fi
	  if [ "$found" -eq "0" ]; then
	  	enckey=$(openssl base64 -d<<<"$line"|openssl rsautl -decrypt -pkcs -inkey $asynckey -in - -out -)
	  fi
	  if [ "$?" -eq "0" ]; then
	  	found=1
	  fi
	  len=$(echo $line | wc -c)
	  let "keylen+=len"
	done < $infile
	let "count=total-keylen"
	if [ "$found" -eq "1" ]; then
		openssl aes-256-cbc -d -in <(tail -c $count $infile) -out $outfile -pbkdf2 -pass stdin<<<"$enckey"
		return 0
	fi
		return 1
}
if [ "$#" -eq "1" ]; then
	if [ "$1" == "-k" ]; then
		ssh-keygen -t rsa -b 4096 -m PEM
		exit $?
	fi
fi
if [ "$#" -lt "3" ]; then
	echo "encrypt: <input> <output> <key files>"
	echo "decrypt: -d <input> <output> <key file>"
	echo "gen rsa: -k"
	exit 0
fi
if [ "$1" == "-d" ]; then
	decrypt $2 $3 $4
	exit $?
fi
infile=$1
outfile=$2
key=$(openssl rand 256|tr '\0' '0')
indx=0
> $outfile
for asynckey in "$@"; do
	if [ $indx -gt 1 ]; then
		openssl rsautl -encrypt -pkcs -pubin -inkey <(ssh-keygen -e -f $asynckey -m PKCS8) -in - -out -<<<"$key"|openssl base64|tr -d '\n\r'>>$outfile
		echo "">>$outfile
	fi
	let "indx++"
done
echo "">>$outfile
openssl aes-256-cbc -in $infile -out - -pbkdf2 -pass stdin<<<"$key">>$outfile
exit $?
